{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A VPC Created in two AZ's with a NATInstance on PublicSubnet to provide InternetAccess for PrivateSubnet.",
  "Parameters": {
    "envPrefix": {
      "Description": "Environment name prefix.",
      "Type": "String",
      "Default": "Test"
    },
	"vpcCidr": {
		"Description": "VPC CIDR block.",
		"Type": "String",
		"Default": "192.168.0.0/16",
		"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
		"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
    },
	"publicSubnet1Cidr": {
		"Description": "Public Subnet 1 CIDR Block.",
		"Type": "String",
		"Default": "192.168.10.0/24",
		"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
		"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x and subnet of VPC."
    },
    "privateSubnet1Cidr": {
		"Description": "Private Subnet 1 CIDR Block.",
		"Type": "String",
		"Default": "192.168.20.0/24",
		"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
		"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x and subnet of VPC."
    },
	"subnet1AZ": {
		"Description": "Subnet 1 Availability Zone.",
		"Type": "AWS::EC2::AvailabilityZone::Name",
		"Default": "us-east-1a"
    },
    "subnet2AZ": {
		"Description": "Subnet 2 Availability Zone.",
		"Type": "AWS::EC2::AvailabilityZone::Name",
		"Default": "us-east-1a"
    },
	"natInstanceType": {
		"Description": "Amazon EC2-Instance type for the NATInstance. This Instance will be put on PublicSubnet-1.",
		"Type": "String",
		"Default": "t2.micro",
		"AllowedValues": [
			"t2.micro", "t2.small", "t2.medium", "t2.large",
			"m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge",
			"m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge" ],
		"Default": "t2.small"
    },
	"NATKeyName": {
		"Description" : "Name of an existing EC2-KeyPair to enable SSH access to NAT-Instances.",
		"Type": "String",
		"Default": "AWSKey_OfficeVersion"
    },
	"natSshAccessCidr": {
		"Description": "IP CIDR from where you could SSH into NAT-Instance",
		"Type": "String",
		"MinLength": "9",
		"MaxLength": "18",
		"Default": "0.0.0.0/0",
		"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
		"ConstraintDescription": "Must be a valid CIDR range of the form x.x.x.x/x."
    }
},

  "Mappings": {
    "AWSNATAMI": {
      "eu-central-1"   : {"AMI": "ami-c58c1dd3"},
      "sa-east-1"      : {"AMI": "ami-c58c1dd3"},
      "ap-northeast-1" : {"AMI": "ami-c58c1dd3"},
      "eu-west-1"      : {"AMI": "ami-c58c1dd3"},
      "us-east-1"      : {"AMI": "ami-c58c1dd3"},
      "us-west-1"      : {"AMI": "ami-c58c1dd3"},
      "us-west-2"      : {"AMI": "ami-c58c1dd3"},
      "ap-southeast-2" : {"AMI": "ami-c58c1dd3"},
      "ap-southeast-1" : {"AMI": "ami-c58c1dd3"}
    }
  },
  
   "Resources": {
    "MyVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {"Ref": "vpcCidr"},
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "VPC"]]}
          }
        ]
      }
    }, 	
	"publicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": ["MyVPC", "attachGateway"],
      "Properties": {
        "CidrBlock": {"Ref": "publicSubnet1Cidr"},
        "AvailabilityZone": {"Ref" : "subnet1AZ"},
        "VpcId": {"Ref": "MyVPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "Subnet-Public-1"]]}
          }
        ]
      }
    },
	"privateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": ["MyVPC", "attachGateway"],
      "Properties": {
        "CidrBlock": {"Ref": "privateSubnet1Cidr"},
        "AvailabilityZone": {"Ref" : "subnet2AZ"},
        "VpcId": {"Ref": "MyVPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "Subnet-Private-1"]]}
          }
        ]
      }
    },
	"inetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": ["MyVPC"],
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "InternetGateway"]]}
          }
        ]
      }
    },
	"attachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": ["MyVPC", "inetGateway"],
      "Properties": {
        "VpcId": {"Ref": "MyVPC"},
        "InternetGatewayId": {"Ref": "inetGateway"}
      }
    },
	"rtbPublic": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": ["MyVPC", "attachGateway"],
      "Properties": {
        "VpcId": {"Ref": "MyVPC"},
        "Tags": [{"Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "RTB-Public"]]}}]
		}
    },
	"routePublic": {
		"Type": "AWS::EC2::Route",
		"DependsOn": ["rtbPublic"],
		"Properties": {
			"DestinationCidrBlock": "0.0.0.0/0",
			"RouteTableId": {"Ref": "rtbPublic"},
			"GatewayId": {"Ref": "inetGateway"}
      },
			"DependsOn": "attachGateway"
    },
	"subnetRouteTableAssociationPublic1": {
		"Type": "AWS::EC2::SubnetRouteTableAssociation",
		"DependsOn": ["rtbPublic", "publicSubnet1"],
		"Properties": {
			"RouteTableId": {"Ref": "rtbPublic"},
			"SubnetId": {"Ref": "publicSubnet1"}
      }
    },
	"rtbPrivate": {
		"Type": "AWS::EC2::RouteTable",
		"DependsOn": ["MyVPC"],
		"Properties": {
			"VpcId": {"Ref": "MyVPC"},
			"Tags": [{"Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "RTB-Private"]]}}]
		}
    },
	"routePrivate": {
		"Type": "AWS::EC2::Route",
		"Properties": {
			"DestinationCidrBlock": "0.0.0.0/0",
			"RouteTableId": {"Ref": "rtbPrivate"},
			"InstanceId": {"Ref": "MyNatInstance"}
		}
    },
	"subnetRouteTableAssociationPrivate1": {
		"Type": "AWS::EC2::SubnetRouteTableAssociation",
		"DependsOn": ["rtbPublic", "privateSubnet1"],
		"Properties": {
			"RouteTableId": {"Ref": "rtbPrivate"},
			"SubnetId": {"Ref": "privateSubnet1"}
		}
    },
	"MyNatInstance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": ["MyVPC", "attachGateway", "publicSubnet1", "NATSecurityGroup"],
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "InstanceType": {"Ref": "natInstanceType"},
        "ImageId": {"Fn::FindInMap": ["AWSNATAMI", {"Ref": "AWS::Region"}, "AMI"]},
        "KeyName": {"Ref": "NATKeyName"},
        "Monitoring": "false",
        "SourceDestCheck": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "NAT"]]}
          }
        ],
		"NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {"Ref": "publicSubnet1"},
            "GroupSet": [
              {"Ref": "NATSecurityGroup"}
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
	"NATSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": ["MyVPC", "attachGateway"],
      "Properties": {
        "GroupDescription": "Security group for NAT instances",
        "VpcId": {"Ref": "MyVPC"},
        "SecurityGroupIngress": [
			{ 
				"IpProtocol": "tcp",
				"FromPort": "0",
				"ToPort": "1024",
				"CidrIp": {"Ref": "privateSubnet1Cidr"}
			},
			{ 
				"IpProtocol": "udp",
				"FromPort": "0",
				"ToPort": "1024",
				"CidrIp": {"Ref": "privateSubnet1Cidr"}
			},
			{ 
				"IpProtocol": "tcp",
				"FromPort": "22",
				"ToPort": "22",
				"CidrIp": {"Ref": "natSshAccessCidr"}
			}
		],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
            {
              "Key": "Name",
              "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "SG-NAT"]]}
            }
          ]
        }
    }
},

 "Outputs" : {
    "VpcId" : {
      "Description": "MyVPC",
      "Value": { "Ref" : "MyVPC" }
    },
    "Publicsubnets" : {
      "Description" : "Public Subnet",
      "Value" : { "Fn::Join" : [",", [{ "Ref" : "publicSubnet1" }]] }
    },
    "Privatesubnets" : {
      "Description" : "Private Subnet",
      "Value" : { "Fn::Join" : [",", [{ "Ref" : "privateSubnet1" }]] }
    },
    "AZs" : {
      "Description" : "Availability zones",
      "Value" :  { "Fn::Join" : [",", [ { "Fn::GetAtt" : ["publicSubnet1", "AvailabilityZone"] }, { "Fn::GetAtt" : ["privateSubnet1", "AvailabilityZone"] }]]}
	  }
    }
 }